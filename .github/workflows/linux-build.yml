name: 'Compile and build the packages for Linux'

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - 'main'
    tags:
      - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      package-iteration:
        description: 'The iteration to give to the package. RPM calls this the ‘release’. FreeBSD calls it ‘PORTREVISION’. Debian calls this ‘debian_revision’'
        required: false
        default: '1'
      package-version:
        description: 'Which tag to build for. Defaults to the current tag. Note: commits do not work, as the SHA is not the same in the monitoring-plugins and lib repo'
        required: false
        default: ''

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  prepare:
    runs-on:
      - 'rhel8'
      - 'self-hosted'

    steps:

      # we use `${{ github.sha }}` so we get a (mostly) unique directory, to avoid folder collisions when multiple workflows are running
      - name: 'checkout the monitoring-plugins repo'
        uses: 'actions/checkout@v3'
        with:
          path: '${{ github.sha }}-${{ github.run_attempt }}/repos/monitoring-plugins'
          ref: '${{ inputs.package-version }}'

      - name: 'checkout the lib repo'
        uses: 'actions/checkout@v3'
        with:
          repository: 'Linuxfabrik/lib'
          ref: '${{ inputs.package-version }}'
          path: '${{ github.sha }}-${{ github.run_attempt }}/repos/lib'

      - name: 'mkdir ${{ github.sha }}-${{ github.run_attempt }}/build'
        run: 'mkdir ${{ github.sha }}-${{ github.run_attempt }}/build'


  # Debian
  build-debian10:
    runs-on:
      - 'rhel8'
      - 'self-hosted'
    needs:
      - 'prepare'

    steps:

      - name: 'mkdir ${{ github.sha }}-${{ github.run_attempt }}/build/debian10'
        run: 'mkdir ${{ github.sha }}-${{ github.run_attempt }}/build/debian10'

      - name: 'Build for Debian 10'
        run: |-
          podman run --interactive --rm \
          --mount type=bind,source=${{ github.sha }}-${{ github.run_attempt }}/build/debian10,destination=/build,relabel=private \
          --mount type=bind,source=${{ github.sha }}-${{ github.run_attempt }}/repos,destination=/repos,relabel=shared,ro=true \
          docker.io/library/debian:buster /bin/bash -x /repos/monitoring-plugins/build/debian10/build.sh ${{ inputs.package-version || github.sha }} ${{ inputs.package-iteration || '1' }}


  build-debian11:
    runs-on:
      - 'rhel8'
      - 'self-hosted'
    needs:
      - 'prepare'

    steps:

      - name: 'mkdir ${{ github.sha }}-${{ github.run_attempt }}/build/debian11'
        run: 'mkdir ${{ github.sha }}-${{ github.run_attempt }}/build/debian11'

      - name: 'Build for Debian 10'
        run: |-
          podman run --interactive --rm \
          --mount type=bind,source=${{ github.sha }}-${{ github.run_attempt }}/build/debian11,destination=/build,relabel=private \
          --mount type=bind,source=${{ github.sha }}-${{ github.run_attempt }}/repos,destination=/repos,relabel=shared,ro=true \
          docker.io/library/debian:bullseye /bin/bash -x /repos/monitoring-plugins/build/debian11/build.sh ${{ inputs.package-version || github.sha }} ${{ inputs.package-iteration || '1' }}


  # RHEL
  build-rhel7:
    runs-on:
      - 'rhel8'
      - 'self-hosted'
    needs:
      - 'prepare'

    steps:

      - name: 'mkdir ${{ github.sha }}-${{ github.run_attempt }}/build/rhel7'
        run: 'mkdir ${{ github.sha }}-${{ github.run_attempt }}/build/rhel7'

      - name: 'Build for RHEL7'
        run: |-
          podman run --interactive --rm \
          --mount type=bind,source=${{ github.sha }}-${{ github.run_attempt }}/build/rhel7,destination=/build,relabel=private \
          --mount type=bind,source=${{ github.sha }}-${{ github.run_attempt }}/repos,destination=/repos,relabel=shared,ro=true \
          registry.access.redhat.com/ubi7/ubi /bin/bash -x /repos/monitoring-plugins/build/rhel7/build.sh ${{ inputs.package-version || github.sha }} ${{ inputs.package-iteration || '1' }}


  build-rhel8:
    runs-on:
      - 'rhel8'
      - 'self-hosted'
    needs:
      - 'prepare'

    steps:

      - name: 'mkdir ${{ github.sha }}-${{ github.run_attempt }}/build/rhel8'
        run: 'mkdir ${{ github.sha }}-${{ github.run_attempt }}/build/rhel8'

      - name: 'Build for RHEL8'
        run: |-
          podman run --interactive --rm \
          --mount type=bind,source=${{ github.sha }}-${{ github.run_attempt }}/build/rhel8,destination=/build,relabel=private \
          --mount type=bind,source=${{ github.sha }}-${{ github.run_attempt }}/repos,destination=/repos,relabel=shared,ro=true \
          registry.access.redhat.com/ubi8/ubi /bin/bash -x /repos/monitoring-plugins/build/rhel8/build.sh ${{ inputs.package-version || github.sha }} ${{ inputs.package-iteration || '1' }}


  build-rhel9:
    runs-on:
      - 'rhel8'
      - 'self-hosted'
    needs:
      - 'prepare'

    steps:

      - name: 'mkdir ${{ github.sha }}-${{ github.run_attempt }}/build/rhel9'
        run: 'mkdir ${{ github.sha }}-${{ github.run_attempt }}/build/rhel9'

      - name: 'Build for RHEL9'
        run: |-
          podman run --interactive --rm \
          --mount type=bind,source=${{ github.sha }}-${{ github.run_attempt }}/build/rhel9,destination=/build,relabel=private \
          --mount type=bind,source=${{ github.sha }}-${{ github.run_attempt }}/repos,destination=/repos,relabel=shared,ro=true \
          registry.access.redhat.com/ubi9/ubi /bin/bash -x /repos/monitoring-plugins/build/rhel9/build.sh ${{ inputs.package-version || github.sha }} ${{ inputs.package-iteration || '1' }}


  # this would not work on the GitHub-hosted runners, as each job is isolated there,
  # but works when self-hosted (since there are no parallel jobs)
  upload-outputs:
    runs-on:
      - 'rhel8'
      - 'self-hosted'
    needs:  # we want this to run after the build jobs
      - 'build-debian10'
      - 'build-debian11'
      - 'build-rhel7'
      - 'build-rhel8'
      - 'build-rhel9'
    if: '${{ always() }}' # however, we want to upload the artifacts even if one build job fails

    steps:

      - name: 'upload the output as monitoring-plugins-linux-packages'
        uses: 'actions/upload-artifact@v3'
        with:
          name: 'monitoring-plugins-linux-packages'
          path: '${{ github.sha }}-${{ github.run_attempt }}/build/'

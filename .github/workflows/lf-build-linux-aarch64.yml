name: 'Linuxfabrik: Build Linux (aarch64)'

on:
  workflow_dispatch:
    inputs:
      compile-plugins:
        description: 'Space-separated list of check plugins to compile and package, for example "cpu-usage feed scanrootkit". Leave empty to build all plugins.'
        required: false
        default: ''
      target-distros:
        description: 'Space-separated list of operating systems to compile on and build packages for. Supported: `debian11 debian12 rocky8 rocky9 ubuntu2004 ubuntu2204 ubuntu2404`. Cannot be empty.'
        required: true
        default: 'debian11 debian12 rocky8 rocky9 ubuntu2004 ubuntu2204 ubuntu2404'
      package-iteration:
        description: 'The iteration number for the package (usually "1").'
        required: true
        default: '1'
      lib-repo-ref:
        description: 'The branch, tag, or SHA to checkout from the lib repo. Defaults to the current branch or tag.'
        required: false
        default: ''

# modify the default permissions granted to the GITHUB_TOKEN
permissions:
  contents: 'read'

jobs:
  build-packages:
    runs-on:
      - 'ubuntu-24.04-arm'
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@cb605e52c26070c328afc4562f0b4ada7618a84e # v2.10.4
        with:
          egress-policy: audit

      - name: 'Set environment variables for the build scripts'
        run: |
          echo "LFMP_ARCH=aarch64" >> $GITHUB_ENV
          echo "LFMP_COMPILE_PLUGINS=${{ github.event.inputs.compile-plugins }}" >> $GITHUB_ENV
          echo "LFMP_PACKAGE_ITERATION=${{ github.event.inputs.package-iteration }}" >> $GITHUB_ENV
          echo "LFMP_TARGET_DISTROS=${{ github.event.inputs.target-distros }}" >> $GITHUB_ENV

          echo "GITHUB_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV

          echo "LFMP_DIR_REPOS=$GITHUB_WORKSPACE/repos" >> $GITHUB_ENV
          echo "LFMP_DIR_COMPILED=$RUNNER_TEMP/lfmp/compiled" >> $GITHUB_ENV
          echo "LFMP_DIR_DIST=$RUNNER_TEMP/lfmp/dist" >> $GITHUB_ENV
          echo "LFMP_DIR_PACKAGED=$RUNNER_TEMP/lfmp/packaged" >> $GITHUB_ENV

      - name: 'Create working directories'
        run: |
          mkdir -p $LFMP_DIR_REPOS
          mkdir -p $LFMP_DIR_COMPILED
          mkdir -p $LFMP_DIR_DIST
          mkdir -p $LFMP_DIR_PACKAGED

      - name: 'git clone https://github.com/Linuxfabrik/THIS-REPO'
        uses: 'actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683' # v4.2.2
        with:
          path: '${{ env.LFMP_DIR_REPOS }}/monitoring-plugins'

      - name: 'git clone https://github.com/Linuxfabrik/lib'
        uses: 'actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683' # v4.2.2
        with:
          repository: 'Linuxfabrik/lib'
          ref: '${{ inputs.lib-repo-ref || github.ref_name }}'
          path: '${{ env.LFMP_DIR_REPOS }}/lib'

      - name: 'Fetch the current version from Github'
        run: >
          /bin/bash
          $LFMP_DIR_REPOS/monitoring-plugins/build/get-latest-version.sh

      - name: 'Debug'
        run: >
          /bin/bash
          $LFMP_DIR_REPOS/monitoring-plugins/build/debug.sh

      - name: 'Install podman'
        run: >
          /bin/bash
           $LFMP_DIR_REPOS/monitoring-plugins/build/install-podman.sh

      - name: 'For each distro compile the specified plugins'
        run: >
          /bin/bash
          $LFMP_DIR_REPOS/monitoring-plugins/build/matrix-compile.sh

      - name: 'Move and merge the relevant parts into $LFMP_DIR_DIST, the folder to build packages from'
        run: >
          /bin/bash
          $LFMP_DIR_REPOS/monitoring-plugins/build/merge-to-dist.sh

      - name: 'Install FPM, the packaging tool'
        run: >
          /bin/bash
          $LFMP_DIR_REPOS/monitoring-plugins/build/install-fpm.sh

      - name: 'Create the fpm files'
        run: >
          /bin/bash
          $LFMP_DIR_REPOS/monitoring-plugins/build/create-fpms.sh

      - name: 'Create the packages for every OS'
        run: >
          /bin/bash
          $LFMP_DIR_REPOS/monitoring-plugins/build/create-packages.sh

      - name: 'Upload the compiled plugins'
        uses: 'actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08' # v4.6.0
        with:
          path: '${{ env.LFMP_DIR_DIST }}/*'
          name: "lfmp-${{ env.LFMP_VERSION }}-${{ env.LFMP_PACKAGE_ITERATION }}.compiled.${{ env.LFMP_ARCH }}"

      - name: 'Upload the packages (rpm, deb, tar, zip)'
        uses: 'actions/upload-artifact@65c4c4a1ddee5b72f698fdd19549f0f0fb45cf08' # v4.6.0
        with:
          path: '${{ env.LFMP_DIR_PACKAGED }}/*'
          name: "lfmp-${{ env.LFMP_VERSION }}-${{ env.LFMP_PACKAGE_ITERATION }}.packaged.${{ env.LFMP_ARCH }}"

#!/usr/bin/env python3
# -*- coding: utf-8; py-indent-offset: 4 -*-
#
# Author:  Linuxfabrik GmbH, Zurich, Switzerland
# Contact: info (at) linuxfabrik (dot) ch
#          https://www.linuxfabrik.ch/
# License: The Unlicense, see LICENSE file.

# https://github.com/Linuxfabrik/monitoring-plugins/blob/main/CONTRIBUTING.md

import sys
sys.path.append("..") # Adds higher directory to python modules path.



import unittest

from lib.globals import *
import lib.base
import lib.shell


class TestCheck(unittest.TestCase):

    check = '../ping'

    def test_ping_127_0_0_1(self):
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --hostname 127.0.0.1'))
        self.assertRegex(stdout, r'^PING 127\.0\.0\.1: ')
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

    def test_ping_localhost(self):
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --hostname localhost'))
        self.assertRegex(stdout, r'^PING localhost: ')
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

    def test_ping_localhost_localdomain(self):
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --hostname localhost.localdomain'))
        self.assertRegex(stdout, r'^PING localhost\.localdomain: ')
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

    def test_ping_localhost_loc(self):
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --hostname localhost.loc'))
        self.assertRegex(stdout, r'^ping: localhost.loc: Name or service not known')
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_UNKNOWN)

    def test_ping_www_google_ch(self):
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --hostname www.google.ch'))
        self.assertRegex(stdout, r'^PING www\.google\.ch')
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

    def test_ping_1_2_3_4_5_6(self):
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --hostname 1.2.3.4.5.6'))
        self.assertRegex(stdout, r'^ping: 1.2.3.4.5.6: Name or service not known')
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_UNKNOWN)

    def test_ping_99_99_99_99(self):
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --hostname 99.99.99.99'))
        self.assertRegex(stdout, r'^Destination host unreachable\. PING 99\.99\.99\.99')
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_CRIT)
   

if __name__ == '__main__':
    unittest.main()
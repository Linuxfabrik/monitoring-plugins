#!/usr/bin/env python3
# -*- coding: utf-8; py-indent-offset: 4 -*-
#
# Author:  Linuxfabrik GmbH, Zurich, Switzerland
# Contact: info (at) linuxfabrik (dot) ch
#          https://www.linuxfabrik.ch/
# License: The Unlicense, see LICENSE file.

# https://github.com/Linuxfabrik/monitoring-plugins/blob/main/CONTRIBUTING.rst

import sys
sys.path.append("..") # Adds higher directory to python modules path.



import unittest

from lib.globals import STATE_OK, STATE_UNKNOWN, STATE_WARN, STATE_CRIT
import lib.base
import lib.disk
import lib.shell


class TestCheck(unittest.TestCase):

    check = '../scanrootkit'

    def test_if_check_runs_EXAMPLE01(self):
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check))
        self.assertIn('Everything is ok. Scanned for ', stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

    def test_if_check_runs_EXAMPLE02(self):
        lib.disk.write_file('/tmp/.cinik', 'test02')
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check))
        self.assertIn('2 rootkit items found. [CRITICAL]', stdout)
        self.assertIn('* CiNIK Worm (Slapper.B variant): /tmp/.cinik (File)', stdout)
        self.assertIn('* Slapper Worm: /tmp/.cinik (File)', stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_CRIT)
        lib.disk.rm_file('/tmp/.cinik')

    def test_if_check_runs_EXAMPLE03(self):
        lib.disk.write_file('/tmp/.cinik', 'test03')
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --severity=warn'))
        self.assertIn('2 rootkit items found. [WARNING]', stdout)
        self.assertIn('* CiNIK Worm (Slapper.B variant): /tmp/.cinik (File)', stdout)
        self.assertIn('* Slapper Worm: /tmp/.cinik (File)', stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_WARN)
        lib.disk.rm_file('/tmp/.cinik')


if __name__ == '__main__':
    unittest.main()
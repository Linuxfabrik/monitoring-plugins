#!/usr/bin/env python3
# -*- coding: utf-8; py-indent-offset: 4 -*-
#
# Author:  Linuxfabrik GmbH, Zurich, Switzerland
# Contact: info (at) linuxfabrik (dot) ch
#          https://www.linuxfabrik.ch/
# License: The Unlicense, see LICENSE file.

# https://github.com/Linuxfabrik/monitoring-plugins/blob/main/CONTRIBUTING.md

import sys
sys.path.append("..") # Adds higher directory to python modules path.



import unittest

from lib.globals import STATE_OK, STATE_UNKNOWN, STATE_WARN, STATE_CRIT
import lib.base
import lib.shell


class TestCheck(unittest.TestCase):

    check = '../php-fpm-status'

    def test_if_check_runs_EXAMPLE01(self):
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --test=stdout/EXAMPLE01,,'))
        self.assertIn('Pool www (dynamic): 128.8K connections, 23 processes (4 active, 19 idle), Up 3h 27m (since 2021-05-08 09:18:11)', stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

    def test_if_check_runs_EXAMPLE02_warn(self):
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --test=stdout/EXAMPLE02,,'))
        self.assertIn('Pool www (dynamic): 47/55 reqs waiting for a free process in listen queue (85.5%) [WARNING], "max children" was reached at least once [WARNING], 42 slow reqs have hit the configured `request_slowlog_timeout` [WARNING], 129.1K connections, 23 processes (3 active, 20 idle), Up 3h 28m (since 2021-05-08 09:18:11)', stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_WARN)

    def test_if_check_runs_EXAMPLE02_crit(self):
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --critical-slowreq 40 --test=stdout/EXAMPLE02,,'))
        self.assertIn('Pool www (dynamic): 47/55 reqs waiting for a free process in listen queue (85.5%) [WARNING], "max children" was reached at least once [WARNING], 42 slow reqs have hit the configured `request_slowlog_timeout` [CRITICAL], 129.1K connections, 23 processes (3 active, 20 idle), Up 3h 28m (since 2021-05-08 09:18:11)', stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_CRIT)

    def test_if_check_runs_EXAMPLE03(self):
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --test=stdout/EXAMPLE03,,'))
        self.assertIn('ValueError: No JSON object could be decoded', stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_UNKNOWN)

    def test_if_check_runs_EXAMPLE04(self):
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --test=stdout/EXAMPLE04,,'))
        self.assertIn('Pool HealthCheck (static): 35.0 connections, 2 processes (1 active, 1 idle), Up ', stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

    
if __name__ == '__main__':
    unittest.main()
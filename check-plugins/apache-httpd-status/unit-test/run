#!/usr/bin/env python3
# -*- encoding: utf-8; py-indent-offset: 4 -*-
#
# Author:  Linuxfabrik GmbH, Zurich, Switzerland
# Contact: info (at) linuxfabrik (dot) ch
#          https://www.linuxfabrik.ch/
# License: The Unlicense, see LICENSE file.

# https://github.com/Linuxfabrik/monitoring-plugins/blob/main/CONTRIBUTING.md

import sys
sys.path.append("..") # Adds higher directory to python modules path.



import unittest

from lib.globals import *
import lib.base
import lib.shell # pylint: disable=C0413


class TestCheck(unittest.TestCase):

    check = '../apache-httpd-status'

    # 01 centos 7 ext status off
    # 02a, 02b centos 7 ext status on
    # 03 centos 8 ext status off
    # 04a, 04b centos 8 ext status off
    # 05 fedora server ext status off
    # 06a, 06b fedora server ext status on

    def test_if_check_runs_EXAMPLE01(self):
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec('rm -f /tmp/linuxfabrik-monitoring-plugins-apache-httpd-status.db'))
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --test=stdout/EXAMPLE01,,'))
        self.assertIn('2/256 workers busy (0.8%; 0 "G"), 5 idle, 249 free',stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

    def test_if_check_runs_EXAMPLE02(self):
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec('rm -f /tmp/linuxfabrik-monitoring-plugins-apache-httpd-status.db'))
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --test=stdout/EXAMPLE02a,,'))
        self.assertIn('Waiting for more data (1).',stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --test=stdout/EXAMPLE02b,,'))
        self.assertIn('1/256 workers busy (0.4%; 0 "G"), 7 idle, 248 free; 65.0 accesses, 49.0KiB traffic; Up 8m 30s',stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

    def test_if_check_runs_EXAMPLE03(self):
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec('rm -f /tmp/linuxfabrik-monitoring-plugins-apache-httpd-status.db'))
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --test=stdout/EXAMPLE03,,'))
        self.assertIn('15/400 workers busy (3.8%; 0 "G"), 85 idle, 300 free',stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

    def test_if_check_runs_EXAMPLE04(self):
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec('rm -f /tmp/linuxfabrik-monitoring-plugins-apache-httpd-status.db'))
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --test=stdout/EXAMPLE04a,,'))
        self.assertIn('Waiting for more data (1).',stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --test=stdout/EXAMPLE04b,,'))
        self.assertIn('Waiting for more data (3).',stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --test=stdout/EXAMPLE04c,,'))
        self.assertIn('10.117.17.40: 13/400 workers busy (3.2%; 0 "G"), 87 idle, 300 free; 547.0 accesses, 11.9MiB traffic; Up ',stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

    def test_if_check_runs_EXAMPLE05(self):
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec('rm -f /tmp/linuxfabrik-monitoring-plugins-apache-httpd-status.db'))
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --test=stdout/EXAMPLE05,,'))
        self.assertIn('1/400 workers busy (0.2%; 0 "G"), 74 idle, 325 free',stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)

    def test_if_check_runs_EXAMPLE06(self):
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec('rm -f /tmp/linuxfabrik-monitoring-plugins-apache-httpd-status.db'))
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --test=stdout/EXAMPLE06a,,'))
        self.assertIn('Waiting for more data (1).',stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --test=stdout/EXAMPLE06b,,'))
        self.assertIn('Waiting for more data (3).',stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --test=stdout/EXAMPLE06c,,'))
        self.assertIn('192.168.122.97: 325/400 workers busy (81.2% [WARNING]; 11 "G"), 75 idle, 1 free; 78.7K accesses, 8.4GiB traffic; Up ',stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_WARN)

    def test_if_check_runs_EXAMPLE07(self):
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec('rm -f /tmp/linuxfabrik-monitoring-plugins-apache-httpd-status.db'))
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --test=stdout/EXAMPLE07a,,'))
        self.assertIn('Waiting for more data (1).',stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --test=stdout/EXAMPLE07b,,'))
        self.assertIn('Waiting for more data (3).',stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --test=stdout/EXAMPLE07c,,'))
        self.assertIn('192.168.122.97: 327/400 workers busy (81.8% [WARNING]; 0 "G"), 73 idle, 0 free; 6.2K accesses, 732.9MiB traffic; Up ',stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_WARN)

    def test_if_check_runs_EXAMPLE08_without_CPULoad(self):
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec('rm -f /tmp/linuxfabrik-monitoring-plugins-apache-httpd-status.db'))
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --test=stdout/EXAMPLE08a,,'))
        self.assertIn('Waiting for more data (1).',stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --test=stdout/EXAMPLE08b,,'))
        self.assertIn('Waiting for more data (3).',stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --test=stdout/EXAMPLE08c,,'))
        self.assertIn('192.168.122.97: 1/400 workers busy (0.2%; 0 "G"), 99 idle, 300 free; 10.0K accesses, 976.6MiB traffic; Up ',stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)


if __name__ == '__main__':
    unittest.main()
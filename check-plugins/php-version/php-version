#!/usr/bin/env python3
# -*- coding: utf-8; py-indent-offset: 4 -*-
#
# Author:  Linuxfabrik GmbH, Zurich, Switzerland
# Contact: info (at) linuxfabrik (dot) ch
#          https://www.linuxfabrik.ch/
# License: The Unlicense, see LICENSE file.

# https://github.com/Linuxfabrik/monitoring-plugins/blob/main/CONTRIBUTING.rst

"""See the check's README for more details.
"""

import argparse  # pylint: disable=C0413
import re  # pylint: disable=C0413
import sys  # pylint: disable=C0413

import lib.base  # pylint: disable=C0413
import lib.shell  # pylint: disable=C0413
import lib.version  # pylint: disable=C0413
from lib.globals import (STATE_UNKNOWN) # pylint: disable=C0413

__author__ = 'Linuxfabrik GmbH, Zurich/Switzerland'
__version__ = '2023071203'

DESCRIPTION = 'Tracks if PHP is EOL.'


def parse_args():
    """Parse command line arguments using argparse.
    """
    parser = argparse.ArgumentParser(description=DESCRIPTION)

    parser.add_argument(
        '-V', '--version',
        action='version',
        version='%(prog)s: v{} by {}'.format(__version__, __author__)
    )

    parser.add_argument(
        '--always-ok',
        help='Always returns OK.',
        dest='ALWAYS_OK',
        action='store_true',
        default=False,
    )

    return parser.parse_args()


def get_installed_version():
    success, result = lib.shell.shell_exec('php --version')
    if not success:
        return ''
    stdout = result[0].strip()
    # where to find the version number in output?
    # PHP 7.2.34-37+0~20230106.78+debian11~1.gbp1ece37 (cli) (built: Jan  6 2023 18:38:02) ( NTS )
    # PHP 8.1.19 (cli) (built: May 10 2023 13:43:03) (NTS gcc x86_64)
    version_regex = r'PHP (\d+\.\d+\.\d+)\W'
    stdout = re.match(version_regex, stdout)
    return stdout.group(1).strip()


def main():
    """The main function. Hier spielt die Musik.
    """

    # parse the command line, exit with UNKNOWN if it fails
    try:
        args = parse_args()
    except SystemExit:
        sys.exit(STATE_UNKNOWN)

    # fetch data
    installed_version = get_installed_version()
    if not installed_version:
        lib.base.cu('PHP not found.')
    try:
        installed_major, installed_minor, installed_patch = installed_version.split('.')
    except:
        installed_patch = '0'
        installed_major, installed_minor = installed_version.split('.')

    state, msg = lib.version.check_eol(
        'https://endoflife.date/api/php.json',
        '{}.{}'.format(installed_major, installed_minor),
    )

    # over and out
    lib.base.oao(
        'PHP v{} ({})'.format(installed_version, msg),
        state,
        lib.base.get_perfdata(
            'php-version',
            '{}.{}{}'.format(installed_major, installed_minor, installed_patch),
            None,
            None,
            None,
            0,
            None,
        ),
        always_ok=args.ALWAYS_OK,
    )


if __name__ == '__main__':
    try:
        main()
    except Exception:   # pylint: disable=W0703
        lib.base.cu()

#!/usr/bin/env python3
# -*- coding: utf-8; py-indent-offset: 4 -*-
#
# Author:  Linuxfabrik GmbH, Zurich, Switzerland
# Contact: info (at) linuxfabrik (dot) ch
#          https://www.linuxfabrik.ch/
# License: The Unlicense, see LICENSE file.

# https://github.com/Linuxfabrik/monitoring-plugins/blob/main/CONTRIBUTING.rst

"""See the check's README for more details.
"""

import argparse  # pylint: disable=C0413
import sys  # pylint: disable=C0413

import lib.base  # pylint: disable=C0413
import lib.disk  # pylint: disable=C0413
import lib.time  # pylint: disable=C0413
import lib.version  # pylint: disable=C0413
from lib.globals import (STATE_UNKNOWN) # pylint: disable=C0413

__author__ = 'Linuxfabrik GmbH, Zurich/Switzerland'
__version__ = '2023071203'

DESCRIPTION = 'Tracks if WordPress is EOL.'

DEFAULT_PATH = '/var/www/html/wordpress'


def parse_args():
    """Parse command line arguments using argparse.
    """
    parser = argparse.ArgumentParser(description=DESCRIPTION)

    parser.add_argument(
        '-V', '--version',
        action='version',
        version='%(prog)s: v{} by {}'.format(__version__, __author__)
    )

    parser.add_argument(
        '--always-ok',
        help='Always returns OK.',
        dest='ALWAYS_OK',
        action='store_true',
        default=False,
    )

    parser.add_argument(
        '--path',
        help='Local path to your WordPress installation, typically within your Webserver\'s '
             'Document Root. Default: %(default)s',
        dest='PATH',
        default=DEFAULT_PATH,
    )

    return parser.parse_args()


def get_installed_version(path):
    try:
        success, version = lib.disk.grep_file(
            path + '/wp-includes/version.php', r'wp_version\s*=\s*\'(.*)\''
        )
    except:
        return (False, 'Unable to get WordPress version information.')
    if not success:
        return (success, version)
    if version:
        return (True, version)
    return (True, False)


def main():
    """The main function. Hier spielt die Musik.
    """

    # parse the command line, exit with UNKNOWN if it fails
    try:
        args = parse_args()
    except SystemExit:
        sys.exit(STATE_UNKNOWN)

    # fetch data
    installed_version = lib.base.coe(get_installed_version(args.PATH))
    if not installed_version:
        lib.base.cu('WordPress not found.')
    try:
        installed_major, installed_minor, installed_patch = installed_version.split('.')
    except:
        installed_patch = '0'
        installed_major, installed_minor = installed_version.split('.')

    state, msg = lib.version.check_eol(
        'https://endoflife.date/api/wordpress.json',
        '{}.{}'.format(installed_major, installed_minor),
    )

    # over and out
    lib.base.oao(
        'WordPress v{} ({})'.format(installed_version, msg),
        state,
        lib.base.get_perfdata(
            'wordpress-version',
            '{}.{}{}'.format(installed_major, installed_minor, installed_patch),
            None,
            None,
            None,
            0,
            None,
        ),
        always_ok=args.ALWAYS_OK,
    )


if __name__ == '__main__':
    try:
        main()
    except Exception:   # pylint: disable=W0703
        lib.base.cu()

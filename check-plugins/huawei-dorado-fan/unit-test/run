#!/usr/bin/env python3
# -*- coding: utf-8; py-indent-offset: 4 -*-
#
# Author:  Linuxfabrik GmbH, Zurich, Switzerland
# Contact: info (at) linuxfabrik (dot) ch
#          https://www.linuxfabrik.ch/
# License: The Unlicense, see LICENSE file.

# https://github.com/Linuxfabrik/monitoring-plugins/blob/main/CONTRIBUTING.md

import sys
sys.path.append("..") # Adds higher directory to python modules path.



import unittest

from lib.globals import STATE_OK, STATE_UNKNOWN, STATE_WARN, STATE_CRIT
import lib.base
import lib.shell


class TestCheck(unittest.TestCase):

    check = '../huawei-dorado-fan'

    #self.assertEqual(retc, STATE_CRIT)
    #self.assertIn('Waiting for more data (1).', stdout)
    #self.assertRegexpMatches(stdout, r'1 error in Kernel Ring Buffer.')

    def test_if_check_runs_EXAMPLE01(self):
        stdout, stderr, retc = lib.base.coe(lib.shell.shell_exec(self.check + ' --device-id=1 --password=pass --url=https://localhost --username=admin --test=stdout/EXAMPLE01,,0'))
        self.assertIn('Everything is ok.', stdout)
        self.assertIn('UUID            ! Location      ! Runlevel   ! Health ! Running', stdout)
        self.assertIn('----------------+---------------+------------+--------+--------', stdout)
        self.assertIn('211:211.0.0.00  ! CTE0.A.FAN0   ! normal (1) ! [OK]   ! [OK]   ', stdout)
        self.assertIn('211:211.0.0.01  ! CTE0.A.FAN1   ! normal (1) ! [OK]   ! [OK]   ', stdout)
        self.assertIn('211:211.0.0.02  ! CTE0.A.FAN2   ! normal (1) ! [OK]   ! [OK]   ', stdout)
        self.assertEqual(stderr, '')
        self.assertEqual(retc, STATE_OK)


if __name__ == '__main__':
    unittest.main()
